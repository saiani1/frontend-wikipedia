export const DUMMY_DATA = [
  {
    id: 1,
    title: "콜스택",
    contents:
      "원시타입 데이터 저장, 실행 컨텍스트를 통해 변수 식별자 저장, 스코프체인 및 this관리, 코드 실행순서 관리 등을 수행함, 더이상 참조되지 않는 데이터는 가비지 컬렉션에 의해 적절한 시점에서 메모리 해제됨",
  },
  {
    id: 2,
    title: "힙",
    contents:
      "참조타입 데이터 저장, 메모리 할당이 일어남, 구조화 되어있지 않음",
  },
  {
    id: 3,
    title: "엄격모드",
    contents:
      "ECMAScript5에서 등장한 엄격모드는 자바스크립트 코드에 더욱 엄격한 오류 검사를 적용해 줌, 부분적으로 엄격모드를 적용할 수 있음",
  },
  {
    id: 4,
    title: "즉시실행함수(IIFE)",
    contents:
      "정의되지마자 즉시 실행되는 함수, 보통 익명함수를 사용, 소괄호에 함수를 감싸서 실행하는 문법을 사용함",
  },
  {
    id: 5,
    title: "엄격모드",
    contents:
      "ECMAScript5에서 등장한 엄격모드는 자바스크립트 코드에 더욱 엄격한 오류 검사를 적용해 줌, 부분적으로 엄격모드를 적용할 수 있음",
  },
  {
    id: 6,
    title: "동기",
    contents:
      "순차적/직렬적으로 태스크를 수행한다.요청을 보냈다면, 응답을 받아야 다음 동작이 이루어진다. 순차적으로 실행되므로, 어떤 작업이 수행중이라면 뒤의 작업은 대기한다. 블로킹(작업 중단)이 발생한다.",
  },
  {
    id: 7,
    title: "비동기",
    contents:
      "병렬적으로 태스크를 수행한다. 현재 작업의 종료여부와 무관하게 다음 작업을 실행한다. 동기 방식과는 달리 완료 순서가 보장되지 않는다. 블로킹이 발생하지 않는다.",
  },
  {
    id: 8,
    title: "이벤트루프",
    contents:
      "콜스택에 현재 실행 중인 실행 컨텍스트가 있는지, 태스크 큐에 대기 중인 함수가 있는지 반복해서 확인하여 콜스택이 비어있고 태스크 큐에 대기 중인 함수가 있다면 이벤트 루프는 순차적으로(FIFO) 태스크 큐에 대기 중인 함수를 콜 스택으로 이동시킴",
  },
  {
    id: 9,
    title: "태스크 큐",
    contents:
      "setTimeout이나 setInterval과 같은 비동기 함수의 콜백 함수 또는 이벤트 핸들러가 일시적으로 보관되는 영역. 태스크큐와는 별도로 프로미스의 후속 처리 메서드의 콜백 함수가 일시적으로 보관되는 마이크로태스크 큐도 존재함",
  },
  {
    id: 10,
    title: "Web API",
    contents:
      "Ajax 요청, setTimeout(), 이벤트 핸들러의 등록과 같이 웹 브라우저에서 제공하는 기능들을 일컬음",
  },
  {
    id: 11,
    title: "requestAnimationFrame",
    contents:
      "브라우저에게 수행하기를 원하는 애니메이션을 알리고 다음 리페인트가 진행되기 전에 해당 애니메이션을 업데이트하는 함수를 호출하게 함. 이 메소드는 리페인트 이전에 실행할 콜백을 인자로 받음.",
  },
  {
    id: 12,
    title: "undefined",
    contents:
      "undefined는 원시값으로 선언한 후에 값을 할당하지 않은 변수나 값이 주어지지 않은 인수에 자동으로 할당됨",
  },
  {
    id: 13,
    title: "null",
    contents:
      "null은 원시값 중 하나로, 어떤 값이 의도적으로 비어있음을 표현함. 해당 변수가 어떤 객체도 가리키고 있지 않다는 것을 의미함",
  },
  {
    id: 14,
    title: "undeclared",
    contents: "접근 가능한 스코프에 변수 선언조차 되어있지 않은 상태를 의미함",
  },
  {
    id: 15,
    title: "map",
    contents:
      "배열 내의 모든 요소 각각에 대하여 주어진 함수를 호출한 결과를 모아 새로운 배열을 반환함",
  },
  {
    id: 16,
    title: "forEach",
    contents: "forEach() 메서드는 주어진 함수를 배열 요소 각각에 대해 실행함",
  },
  {
    id: 17,
    title: "reduce",
    contents:
      "reduce() 메서드는 배열의 각 요소에 대해 주어진 리듀서 (reducer) 함수를 실행하고, 하나의 결과값을 반환함",
  },
];
